{"version":3,"file":"static/webpack/static/development/pages/index.js.06a3a4e5626a997744b3.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/isomorphic-unfetch/browser.js","webpack:///./node_modules/isomorphic-unfetch/node_modules/unfetch/dist/unfetch.mjs","webpack:///./pages/index.js"],"sourcesContent":["import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","module.exports = window.fetch || (window.fetch = require('unfetch').default || require('unfetch'));\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(JSON.parse(s.responseText))},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.mjs.map\n","import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport fetch from 'isomorphic-unfetch'\nimport React from 'react'\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  static getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n    const data = await res.json()\n    console.log(`Show data fetched. Count: ${data.length}`)\n    return {\n      shows: data\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n        <h1>batman TV show</h1>\n        <ul>\n          {this.props.shows.map(({show}) => (\n            <li key={show.id}>\n              <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n                <a>{show.name}</a>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <style jsx>{`\n          h1, a {\n            font-family: \"Arial\";\n          }\n\n          ul {\n            padding: 0;\n          }\n\n          li {\n            list-style: none;\n            margin: 5px 0;\n          }\n\n          a {\n            text-decoration: none;\n            color: blue;\n          }\n\n          a:hover {\n            opacity: 0.6;\n          }\n        `}</style>\n      </Layout>\n      </div>\n    )\n  }\n}\n\nexport default Index\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;;;;;;;;;;;;;ACAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAUA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAHA;AAHA;AAAA;AAqCA;;;;AAtDA;AACA;AADA;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmDA;;;;A","sourceRoot":""}